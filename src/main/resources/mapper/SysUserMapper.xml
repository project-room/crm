<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.crm.biz.sys.dao.SysUserMapper" >
  <resultMap id="BaseResultMap" type="com.crm.entity.SysUser" >
    <id column="user_id" property="userId" jdbcType="BIGINT" />
    <!--角色id-->
    <result column="role_id" property="roleId" jdbcType="BIGINT" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="user_accounts" property="userAccounts" jdbcType="VARCHAR" />
    <result column="user_password" property="userPassword" jdbcType="VARCHAR" />
    <result column="user_status" property="userStatus" jdbcType="INTEGER" />
    <result column="user_department" property="userDepartment" jdbcType="VARCHAR" />
    <result column="user_position" property="userPosition" jdbcType="VARCHAR" />
    <result column="user_email" property="userEmail" jdbcType="VARCHAR" />
    <result column="user_phone" property="userPhone" jdbcType="VARCHAR" />
    <result column="user_workphone" property="userWorkphone" jdbcType="VARCHAR" />
    <result column="user_state" property="userState" jdbcType="INTEGER" />
    <!--用户表和角色表的关联-->
    <association  property="sysRole" column="role_id" javaType="SysRole" >
      <id property="roleId" column="role_id"/>
      <result property="roleName" column="role_name" />
      <result property="roleDesc" column="role_desc" />
      <result property="roleFlag" column="role_flag" />
    </association>

    <!--用户表和客户表的关联-->
    <collection property="customerList" ofType="com.crm.entity.CstCustomer">
      <id column="cust_id" property="custId" jdbcType="BIGINT" />
      <result column="cust_email" property="custEmail" jdbcType="VARCHAR" />
      <result column="cust_company" property="custCompany" jdbcType="VARCHAR" />
      <result column="cust_address" property="custAddress" jdbcType="VARCHAR" />
      <result column="cust_industry" property="custIndustry" jdbcType="VARCHAR" />
      <result column="cust_pic" property="custPic" jdbcType="VARCHAR" />
      <result column="cust_sales" property="custSales" jdbcType="VARCHAR" />
      <result column="user_id" property="userId" jdbcType="BIGINT" />
      <result column="cust_classify" property="custClassify" jdbcType="INTEGER" />
      <result column="cust_content" property="custContent" jdbcType="VARCHAR" />
      <result column="cust_lifecycle" property="custLifecycle" jdbcType="VARCHAR" />
      <result column="cust_website" property="custWebsite" jdbcType="VARCHAR" />
      <result column="cust_type" property="custType" jdbcType="VARCHAR" />
      <result column="cust_date" property="custDate" jdbcType="TIMESTAMP" />
    </collection>
    <!--用户表和任务表的关联-->
    <collection property="taskList" ofType="com.crm.entity.UserTask">
      <id column="task_id" property="taskId" jdbcType="BIGINT" />
      <result column="task_status" property="taskStatus" jdbcType="INTEGER" />
      <result column="task_content" property="taskContent" jdbcType="VARCHAR" />
      <result column="task_date" property="taskDate" jdbcType="TIMESTAMP" />
      <result column="user_id" property="userId" jdbcType="BIGINT" />
      <result column="ch_id" property="chId" jdbcType="BIGINT" />
    </collection>
    <!--用户表和机会表的关联-->
    <collection property="chanceList" ofType="com.crm.entity.CstChance">
      <id column="ch_id" property="chId" jdbcType="BIGINT" />
      <result column="ch_content" property="chContent" jdbcType="VARCHAR" />
      <result column="cust_id" property="custId" jdbcType="BIGINT" />
      <result column="ch_date" property="chDate" jdbcType="TIMESTAMP" />
      <result column="ch_money" property="chMoney" jdbcType="DOUBLE" />
      <result column="userTo_id" property="userToId" jdbcType="BIGINT"/>
      <result column="user_id" property="userId" jdbcType="BIGINT" />
      <result column="ch_dept" property="chDept" jdbcType="VARCHAR" />
      <result column="ch_doc" property="chDoc" jdbcType="INTEGER" />
      <result column="ch_supplier" property="chSupplier" jdbcType="INTEGER" />
      <result column="ch_uptime" property="chUptime" jdbcType="VARCHAR" />
      <result column="ch_background" property="chBackground" jdbcType="VARCHAR" />
      <result column="ch_Intentionality" property="chIntentionality" jdbcType="VARCHAR" />
      <result column="ch_stage" property="chStage" jdbcType="VARCHAR" />
      <result column="ch_importance" property="chImportance" jdbcType="VARCHAR"/>
      <result column="ch_requirement" property="requirement" jdbcType="VARCHAR"/>
      <result column="ch_Follow" property="chFollow" jdbcType="VARCHAR"/>
      <result column="ch_Transaction" property="chTransaction" jdbcType="VARCHAR"/>
      <result column="ch_LostSingleType" property="chLostSingleType" jdbcType="VARCHAR"/>
      <result column="ch_ReasonsForLosingOrders" property="chReasonsForLosingOrders" jdbcType="VARCHAR"/>
      <result column="ch_status" property="chStatus" jdbcType="VARCHAR"/>
      <result column="ch_TransferTime" property="TransferTime" jdbcType="VARCHAR"/>
      <result column="ch_examine" property="chExamine" jdbcType="BIGINT"/>
    </collection>



  </resultMap>
  <select id="findById" parameterType="Long" resultMap="BaseResultMap">
    SELECT * FROM sys_user WHERE user_id=#{id}
  </select>
  <insert id="addSysUser" parameterType="SysUser">
    INSERT INTO sys_user (user_name,user_accounts,user_password,user_status,user_department,user_position,user_email,user_phone,user_workphone)
    VALUES (#{userName},#{userAccounts},#{userPassword},#{userStatus},#{userDepartment},#{userPosition},#{userEmail},#{userPhone},#{userWorkphone})
  </insert>
<!--  <delete id="deleteById" parameterType="Long">
    DELETE FROM sys_user WHERE user_id=#{id}
  </delete>-->
  <update id="deleteById" parameterType="Long">
    UPDATE  sys_user SET user_status = 0 WHERE  user_id = #{id}
  </update>
  <update id="updateSysUserById" parameterType="SysUser">
    UPDATE sys_user SET user_name=#{userName},user_accounts=#{userAccounts},user_password=#{userPassword},user_status=#{userStatus},user_department=#{userDepartment},user_position=#{userPosition},user_email=#{userEmail},user_phone=#{userPhone},user_workphone=#{userWorkphone},role_id=#{roleId} WHERE user_id=#{userId}
  </update>
  <select id="findByAccount" parameterType="String" resultMap="BaseResultMap">
    select * from sys_user where user_accounts = #{account}
  </select>
  <!--通过用户名获取用户id-->
  <select id="selectUserIdByUserName" parameterType="String"  resultType="Long">
        SELECT user_id FROM sys_user WHERE user_name=#{userName}
  </select>

  <select id="loginAccountAndUserName" parameterType="map" resultMap="BaseResultMap">
      SELECT * FROM sys_user  WHERE user_accounts=#{account} AND user_password=#{password}
  </select>

  <!--根据手机号码来查询用户-->
  <select id="selectSysUserByPhone" parameterType="String" resultMap="BaseResultMap">
          SELECT * FROM sys_user WHERE user_phone=#{phone}
  </select>

  <!--根据用户id查询用户和角色信息-->
  <select id="selectSysUserAndRoleInfoBySysUserId" parameterType="Long" resultMap="BaseResultMap">
        SELECT * FROM sys_user su ,sys_role sr WHERE su.`role_id`=sr.`role_id` AND su.`user_id`=#{sysUserId}
  </select>

  <!--获取用户列表-->
  <select id="selectSysUserList" parameterType="Integer" resultMap="BaseResultMap">
SELECT * FROM sys_user su,sys_role sr WHERE su.`role_id`=sr.`role_id` LIMIT #{currentPage},#{pageSize}
  </select>

  <!--添加员工-->
  <insert id="addSysUserInfo" parameterType="SysUser">
INSERT INTO sys_user(role_id,user_name,user_accounts,user_password,user_status,user_department,user_position,user_phone)
VALUES(#{roleId},#{userName},#{userAccounts},#{userPassword},#{userStatus},#{userDepartment},#{userPosition},#{userPhone})
  </insert>

  <!--获取用户总记录条数-->
  <select id="getCounts" resultType="Long">
SELECT COUNT(1) FROM sys_user su,sys_role sr WHERE su.`role_id`=sr.`role_id`
  </select>

  <!--根据用户名或账号获取用户的集合-->
  <select id="selectSysUserByUserNameOrAccount" parameterType="map" resultMap="BaseResultMap">
SELECT * FROM sys_user su,sys_role sr WHERE su.`role_id`=sr.`role_id` HAVING user_name LIKE #{userNameOrAccount} OR user_accounts LIKE #{userNameOrAccount} LIMIT #{currentPage},#{pageSize}
  </select>

  <!--根据用户名或账号获取用户总录数-->
  <select id="selectCountByUserNameOrAccount" parameterType="String" resultType="Long">
    SELECT COUNT(1) FROM sys_user su,sys_role sr WHERE su.`role_id`=sr.`role_id`  AND (user_name LIKE #{userNameOrAccount} OR user_accounts LIKE #{userNameOrAccount} )
  </select>

  <!--根据用户id获取用户的信息-->
  <select id="selectSysUserById" parameterType="Long" resultMap="BaseResultMap">
    SELECT * FROM sys_user su ,sys_role sr WHERE su.`role_id`=sr.`role_id` AND su.`user_id`=#{userId}
  </select>


  <select id="getSysUser" parameterType="Long" resultMap="BaseResultMap">
    select user_id,user_name from sys_user where user_id!=#{userId}
  </select>
</mapper>